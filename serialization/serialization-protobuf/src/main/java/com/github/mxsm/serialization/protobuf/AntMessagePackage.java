// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AntMessage.proto

package com.github.mxsm.serialization.protobuf;

/**
 * Protobuf type {@code com.github.mxsm.serialization.protobuf.AntMessagePackage}
 */
public final class AntMessagePackage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.github.mxsm.serialization.protobuf.AntMessagePackage)
    AntMessagePackageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AntMessagePackage.newBuilder() to construct.
  private AntMessagePackage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AntMessagePackage() {
    protocol_ = "";
    version_ = "";
    ctrlMessages_ = java.util.Collections.emptyList();
    messages_ = java.util.Collections.emptyList();
    attachments_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AntMessagePackage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AntMessagePackage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            protocol_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            version_ = s;
            break;
          }
          case 24: {

            packageId_ = input.readInt64();
            break;
          }
          case 32: {

            packageTime_ = input.readInt64();
            break;
          }
          case 40: {

            flags_ = input.readInt32();
            break;
          }
          case 50: {
            com.github.mxsm.serialization.protobuf.Header.Builder subBuilder = null;
            if (header_ != null) {
              subBuilder = header_.toBuilder();
            }
            header_ = input.readMessage(com.github.mxsm.serialization.protobuf.Header.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(header_);
              header_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              ctrlMessages_ = new java.util.ArrayList<com.github.mxsm.serialization.protobuf.CtrlMessage>();
              mutable_bitField0_ |= 0x00000001;
            }
            ctrlMessages_.add(
                input.readMessage(com.github.mxsm.serialization.protobuf.CtrlMessage.parser(), extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              messages_ = new java.util.ArrayList<com.github.mxsm.serialization.protobuf.Message>();
              mutable_bitField0_ |= 0x00000002;
            }
            messages_.add(
                input.readMessage(com.github.mxsm.serialization.protobuf.Message.parser(), extensionRegistry));
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              attachments_ = new java.util.ArrayList<com.github.mxsm.serialization.protobuf.AttachmentMessage>();
              mutable_bitField0_ |= 0x00000004;
            }
            attachments_.add(
                input.readMessage(com.github.mxsm.serialization.protobuf.AttachmentMessage.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        ctrlMessages_ = java.util.Collections.unmodifiableList(ctrlMessages_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        messages_ = java.util.Collections.unmodifiableList(messages_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        attachments_ = java.util.Collections.unmodifiableList(attachments_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.mxsm.serialization.protobuf.AntMessage.internal_static_com_github_mxsm_serialization_protobuf_AntMessagePackage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.mxsm.serialization.protobuf.AntMessage.internal_static_com_github_mxsm_serialization_protobuf_AntMessagePackage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.mxsm.serialization.protobuf.AntMessagePackage.class, com.github.mxsm.serialization.protobuf.AntMessagePackage.Builder.class);
  }

  public static final int PROTOCOL_FIELD_NUMBER = 1;
  private volatile java.lang.Object protocol_;
  /**
   * <pre>
   * 协议名称 YZIMP
   * </pre>
   *
   * <code>string protocol = 1;</code>
   * @return The protocol.
   */
  @java.lang.Override
  public java.lang.String getProtocol() {
    java.lang.Object ref = protocol_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      protocol_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 协议名称 YZIMP
   * </pre>
   *
   * <code>string protocol = 1;</code>
   * @return The bytes for protocol.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProtocolBytes() {
    java.lang.Object ref = protocol_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      protocol_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERSION_FIELD_NUMBER = 2;
  private volatile java.lang.Object version_;
  /**
   * <pre>
   * 协议版本号 2.0
   * </pre>
   *
   * <code>string version = 2;</code>
   * @return The version.
   */
  @java.lang.Override
  public java.lang.String getVersion() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      version_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 协议版本号 2.0
   * </pre>
   *
   * <code>string version = 2;</code>
   * @return The bytes for version.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVersionBytes() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      version_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PACKAGEID_FIELD_NUMBER = 3;
  private long packageId_;
  /**
   * <pre>
   * 消息包序号，对于每个不同的connId，packageId从0开始重新计算-- 暂时没用因为接入其他
   * </pre>
   *
   * <code>int64 packageId = 3;</code>
   * @return The packageId.
   */
  @java.lang.Override
  public long getPackageId() {
    return packageId_;
  }

  public static final int PACKAGETIME_FIELD_NUMBER = 4;
  private long packageTime_;
  /**
   * <pre>
   * 消息包时间戳
   * </pre>
   *
   * <code>int64 packageTime = 4;</code>
   * @return The packageTime.
   */
  @java.lang.Override
  public long getPackageTime() {
    return packageTime_;
  }

  public static final int FLAGS_FIELD_NUMBER = 5;
  private int flags_;
  /**
   * <pre>
   * 消息体置位标记，共4bytes，32bits，从最低位开始置位表示相应的消息体中是否包含内容
   * 目前仅有最低4bit有效，分别从低位至高位代表用户信息、终端信息、控制信息、内容信息和附件信息
   * 示意图：
   * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][Attachment][ImMessage][ImCtrlMessage][terminal][userInfo]]
   * 如发送一个conn消息应该包含用户信息、终端信息、控制信息，不包含内容信息和附件信息，则flags的设置值为：
   * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][1][1][1]]
   * </pre>
   *
   * <code>int32 flags = 5;</code>
   * @return The flags.
   */
  @java.lang.Override
  public int getFlags() {
    return flags_;
  }

  public static final int HEADER_FIELD_NUMBER = 6;
  private com.github.mxsm.serialization.protobuf.Header header_;
  /**
   * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
   * @return Whether the header field is set.
   */
  @java.lang.Override
  public boolean hasHeader() {
    return header_ != null;
  }
  /**
   * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
   * @return The header.
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.Header getHeader() {
    return header_ == null ? com.github.mxsm.serialization.protobuf.Header.getDefaultInstance() : header_;
  }
  /**
   * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.HeaderOrBuilder getHeaderOrBuilder() {
    return getHeader();
  }

  public static final int CTRLMESSAGES_FIELD_NUMBER = 7;
  private java.util.List<com.github.mxsm.serialization.protobuf.CtrlMessage> ctrlMessages_;
  /**
   * <pre>
   * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.mxsm.serialization.protobuf.CtrlMessage> getCtrlMessagesList() {
    return ctrlMessages_;
  }
  /**
   * <pre>
   * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder> 
      getCtrlMessagesOrBuilderList() {
    return ctrlMessages_;
  }
  /**
   * <pre>
   * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
   */
  @java.lang.Override
  public int getCtrlMessagesCount() {
    return ctrlMessages_.size();
  }
  /**
   * <pre>
   * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.CtrlMessage getCtrlMessages(int index) {
    return ctrlMessages_.get(index);
  }
  /**
   * <pre>
   * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder getCtrlMessagesOrBuilder(
      int index) {
    return ctrlMessages_.get(index);
  }

  public static final int MESSAGES_FIELD_NUMBER = 8;
  private java.util.List<com.github.mxsm.serialization.protobuf.Message> messages_;
  /**
   * <pre>
   * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.mxsm.serialization.protobuf.Message> getMessagesList() {
    return messages_;
  }
  /**
   * <pre>
   * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.mxsm.serialization.protobuf.MessageOrBuilder> 
      getMessagesOrBuilderList() {
    return messages_;
  }
  /**
   * <pre>
   * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
   */
  @java.lang.Override
  public int getMessagesCount() {
    return messages_.size();
  }
  /**
   * <pre>
   * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.Message getMessages(int index) {
    return messages_.get(index);
  }
  /**
   * <pre>
   * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.MessageOrBuilder getMessagesOrBuilder(
      int index) {
    return messages_.get(index);
  }

  public static final int ATTACHMENTS_FIELD_NUMBER = 9;
  private java.util.List<com.github.mxsm.serialization.protobuf.AttachmentMessage> attachments_;
  /**
   * <pre>
   * 一个消息包中可发送多个文件附件，原则上不应该超过10个
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.mxsm.serialization.protobuf.AttachmentMessage> getAttachmentsList() {
    return attachments_;
  }
  /**
   * <pre>
   * 一个消息包中可发送多个文件附件，原则上不应该超过10个
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder> 
      getAttachmentsOrBuilderList() {
    return attachments_;
  }
  /**
   * <pre>
   * 一个消息包中可发送多个文件附件，原则上不应该超过10个
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
   */
  @java.lang.Override
  public int getAttachmentsCount() {
    return attachments_.size();
  }
  /**
   * <pre>
   * 一个消息包中可发送多个文件附件，原则上不应该超过10个
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.AttachmentMessage getAttachments(int index) {
    return attachments_.get(index);
  }
  /**
   * <pre>
   * 一个消息包中可发送多个文件附件，原则上不应该超过10个
   * </pre>
   *
   * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
   */
  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder getAttachmentsOrBuilder(
      int index) {
    return attachments_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getProtocolBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, protocol_);
    }
    if (!getVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
    }
    if (packageId_ != 0L) {
      output.writeInt64(3, packageId_);
    }
    if (packageTime_ != 0L) {
      output.writeInt64(4, packageTime_);
    }
    if (flags_ != 0) {
      output.writeInt32(5, flags_);
    }
    if (header_ != null) {
      output.writeMessage(6, getHeader());
    }
    for (int i = 0; i < ctrlMessages_.size(); i++) {
      output.writeMessage(7, ctrlMessages_.get(i));
    }
    for (int i = 0; i < messages_.size(); i++) {
      output.writeMessage(8, messages_.get(i));
    }
    for (int i = 0; i < attachments_.size(); i++) {
      output.writeMessage(9, attachments_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getProtocolBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, protocol_);
    }
    if (!getVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
    }
    if (packageId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, packageId_);
    }
    if (packageTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, packageTime_);
    }
    if (flags_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, flags_);
    }
    if (header_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getHeader());
    }
    for (int i = 0; i < ctrlMessages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, ctrlMessages_.get(i));
    }
    for (int i = 0; i < messages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, messages_.get(i));
    }
    for (int i = 0; i < attachments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, attachments_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.mxsm.serialization.protobuf.AntMessagePackage)) {
      return super.equals(obj);
    }
    com.github.mxsm.serialization.protobuf.AntMessagePackage other = (com.github.mxsm.serialization.protobuf.AntMessagePackage) obj;

    if (!getProtocol()
        .equals(other.getProtocol())) return false;
    if (!getVersion()
        .equals(other.getVersion())) return false;
    if (getPackageId()
        != other.getPackageId()) return false;
    if (getPackageTime()
        != other.getPackageTime()) return false;
    if (getFlags()
        != other.getFlags()) return false;
    if (hasHeader() != other.hasHeader()) return false;
    if (hasHeader()) {
      if (!getHeader()
          .equals(other.getHeader())) return false;
    }
    if (!getCtrlMessagesList()
        .equals(other.getCtrlMessagesList())) return false;
    if (!getMessagesList()
        .equals(other.getMessagesList())) return false;
    if (!getAttachmentsList()
        .equals(other.getAttachmentsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + getProtocol().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion().hashCode();
    hash = (37 * hash) + PACKAGEID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPackageId());
    hash = (37 * hash) + PACKAGETIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPackageTime());
    hash = (37 * hash) + FLAGS_FIELD_NUMBER;
    hash = (53 * hash) + getFlags();
    if (hasHeader()) {
      hash = (37 * hash) + HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getHeader().hashCode();
    }
    if (getCtrlMessagesCount() > 0) {
      hash = (37 * hash) + CTRLMESSAGES_FIELD_NUMBER;
      hash = (53 * hash) + getCtrlMessagesList().hashCode();
    }
    if (getMessagesCount() > 0) {
      hash = (37 * hash) + MESSAGES_FIELD_NUMBER;
      hash = (53 * hash) + getMessagesList().hashCode();
    }
    if (getAttachmentsCount() > 0) {
      hash = (37 * hash) + ATTACHMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getAttachmentsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.mxsm.serialization.protobuf.AntMessagePackage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.mxsm.serialization.protobuf.AntMessagePackage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.github.mxsm.serialization.protobuf.AntMessagePackage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.github.mxsm.serialization.protobuf.AntMessagePackage)
      com.github.mxsm.serialization.protobuf.AntMessagePackageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.mxsm.serialization.protobuf.AntMessage.internal_static_com_github_mxsm_serialization_protobuf_AntMessagePackage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.mxsm.serialization.protobuf.AntMessage.internal_static_com_github_mxsm_serialization_protobuf_AntMessagePackage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.mxsm.serialization.protobuf.AntMessagePackage.class, com.github.mxsm.serialization.protobuf.AntMessagePackage.Builder.class);
    }

    // Construct using com.github.mxsm.serialization.protobuf.AntMessagePackage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCtrlMessagesFieldBuilder();
        getMessagesFieldBuilder();
        getAttachmentsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      protocol_ = "";

      version_ = "";

      packageId_ = 0L;

      packageTime_ = 0L;

      flags_ = 0;

      if (headerBuilder_ == null) {
        header_ = null;
      } else {
        header_ = null;
        headerBuilder_ = null;
      }
      if (ctrlMessagesBuilder_ == null) {
        ctrlMessages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        ctrlMessagesBuilder_.clear();
      }
      if (messagesBuilder_ == null) {
        messages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        messagesBuilder_.clear();
      }
      if (attachmentsBuilder_ == null) {
        attachments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        attachmentsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.mxsm.serialization.protobuf.AntMessage.internal_static_com_github_mxsm_serialization_protobuf_AntMessagePackage_descriptor;
    }

    @java.lang.Override
    public com.github.mxsm.serialization.protobuf.AntMessagePackage getDefaultInstanceForType() {
      return com.github.mxsm.serialization.protobuf.AntMessagePackage.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.mxsm.serialization.protobuf.AntMessagePackage build() {
      com.github.mxsm.serialization.protobuf.AntMessagePackage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.mxsm.serialization.protobuf.AntMessagePackage buildPartial() {
      com.github.mxsm.serialization.protobuf.AntMessagePackage result = new com.github.mxsm.serialization.protobuf.AntMessagePackage(this);
      int from_bitField0_ = bitField0_;
      result.protocol_ = protocol_;
      result.version_ = version_;
      result.packageId_ = packageId_;
      result.packageTime_ = packageTime_;
      result.flags_ = flags_;
      if (headerBuilder_ == null) {
        result.header_ = header_;
      } else {
        result.header_ = headerBuilder_.build();
      }
      if (ctrlMessagesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          ctrlMessages_ = java.util.Collections.unmodifiableList(ctrlMessages_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ctrlMessages_ = ctrlMessages_;
      } else {
        result.ctrlMessages_ = ctrlMessagesBuilder_.build();
      }
      if (messagesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.messages_ = messages_;
      } else {
        result.messages_ = messagesBuilder_.build();
      }
      if (attachmentsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          attachments_ = java.util.Collections.unmodifiableList(attachments_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.attachments_ = attachments_;
      } else {
        result.attachments_ = attachmentsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.mxsm.serialization.protobuf.AntMessagePackage) {
        return mergeFrom((com.github.mxsm.serialization.protobuf.AntMessagePackage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.mxsm.serialization.protobuf.AntMessagePackage other) {
      if (other == com.github.mxsm.serialization.protobuf.AntMessagePackage.getDefaultInstance()) return this;
      if (!other.getProtocol().isEmpty()) {
        protocol_ = other.protocol_;
        onChanged();
      }
      if (!other.getVersion().isEmpty()) {
        version_ = other.version_;
        onChanged();
      }
      if (other.getPackageId() != 0L) {
        setPackageId(other.getPackageId());
      }
      if (other.getPackageTime() != 0L) {
        setPackageTime(other.getPackageTime());
      }
      if (other.getFlags() != 0) {
        setFlags(other.getFlags());
      }
      if (other.hasHeader()) {
        mergeHeader(other.getHeader());
      }
      if (ctrlMessagesBuilder_ == null) {
        if (!other.ctrlMessages_.isEmpty()) {
          if (ctrlMessages_.isEmpty()) {
            ctrlMessages_ = other.ctrlMessages_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCtrlMessagesIsMutable();
            ctrlMessages_.addAll(other.ctrlMessages_);
          }
          onChanged();
        }
      } else {
        if (!other.ctrlMessages_.isEmpty()) {
          if (ctrlMessagesBuilder_.isEmpty()) {
            ctrlMessagesBuilder_.dispose();
            ctrlMessagesBuilder_ = null;
            ctrlMessages_ = other.ctrlMessages_;
            bitField0_ = (bitField0_ & ~0x00000001);
            ctrlMessagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCtrlMessagesFieldBuilder() : null;
          } else {
            ctrlMessagesBuilder_.addAllMessages(other.ctrlMessages_);
          }
        }
      }
      if (messagesBuilder_ == null) {
        if (!other.messages_.isEmpty()) {
          if (messages_.isEmpty()) {
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMessagesIsMutable();
            messages_.addAll(other.messages_);
          }
          onChanged();
        }
      } else {
        if (!other.messages_.isEmpty()) {
          if (messagesBuilder_.isEmpty()) {
            messagesBuilder_.dispose();
            messagesBuilder_ = null;
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000002);
            messagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMessagesFieldBuilder() : null;
          } else {
            messagesBuilder_.addAllMessages(other.messages_);
          }
        }
      }
      if (attachmentsBuilder_ == null) {
        if (!other.attachments_.isEmpty()) {
          if (attachments_.isEmpty()) {
            attachments_ = other.attachments_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAttachmentsIsMutable();
            attachments_.addAll(other.attachments_);
          }
          onChanged();
        }
      } else {
        if (!other.attachments_.isEmpty()) {
          if (attachmentsBuilder_.isEmpty()) {
            attachmentsBuilder_.dispose();
            attachmentsBuilder_ = null;
            attachments_ = other.attachments_;
            bitField0_ = (bitField0_ & ~0x00000004);
            attachmentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAttachmentsFieldBuilder() : null;
          } else {
            attachmentsBuilder_.addAllMessages(other.attachments_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.mxsm.serialization.protobuf.AntMessagePackage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.mxsm.serialization.protobuf.AntMessagePackage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object protocol_ = "";
    /**
     * <pre>
     * 协议名称 YZIMP
     * </pre>
     *
     * <code>string protocol = 1;</code>
     * @return The protocol.
     */
    public java.lang.String getProtocol() {
      java.lang.Object ref = protocol_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protocol_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 协议名称 YZIMP
     * </pre>
     *
     * <code>string protocol = 1;</code>
     * @return The bytes for protocol.
     */
    public com.google.protobuf.ByteString
        getProtocolBytes() {
      java.lang.Object ref = protocol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 协议名称 YZIMP
     * </pre>
     *
     * <code>string protocol = 1;</code>
     * @param value The protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      protocol_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 协议名称 YZIMP
     * </pre>
     *
     * <code>string protocol = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProtocol() {
      
      protocol_ = getDefaultInstance().getProtocol();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 协议名称 YZIMP
     * </pre>
     *
     * <code>string protocol = 1;</code>
     * @param value The bytes for protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      protocol_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object version_ = "";
    /**
     * <pre>
     * 协议版本号 2.0
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The version.
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 协议版本号 2.0
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 协议版本号 2.0
     * </pre>
     *
     * <code>string version = 2;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 协议版本号 2.0
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      
      version_ = getDefaultInstance().getVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 协议版本号 2.0
     * </pre>
     *
     * <code>string version = 2;</code>
     * @param value The bytes for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      version_ = value;
      onChanged();
      return this;
    }

    private long packageId_ ;
    /**
     * <pre>
     * 消息包序号，对于每个不同的connId，packageId从0开始重新计算-- 暂时没用因为接入其他
     * </pre>
     *
     * <code>int64 packageId = 3;</code>
     * @return The packageId.
     */
    @java.lang.Override
    public long getPackageId() {
      return packageId_;
    }
    /**
     * <pre>
     * 消息包序号，对于每个不同的connId，packageId从0开始重新计算-- 暂时没用因为接入其他
     * </pre>
     *
     * <code>int64 packageId = 3;</code>
     * @param value The packageId to set.
     * @return This builder for chaining.
     */
    public Builder setPackageId(long value) {
      
      packageId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 消息包序号，对于每个不同的connId，packageId从0开始重新计算-- 暂时没用因为接入其他
     * </pre>
     *
     * <code>int64 packageId = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPackageId() {
      
      packageId_ = 0L;
      onChanged();
      return this;
    }

    private long packageTime_ ;
    /**
     * <pre>
     * 消息包时间戳
     * </pre>
     *
     * <code>int64 packageTime = 4;</code>
     * @return The packageTime.
     */
    @java.lang.Override
    public long getPackageTime() {
      return packageTime_;
    }
    /**
     * <pre>
     * 消息包时间戳
     * </pre>
     *
     * <code>int64 packageTime = 4;</code>
     * @param value The packageTime to set.
     * @return This builder for chaining.
     */
    public Builder setPackageTime(long value) {
      
      packageTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 消息包时间戳
     * </pre>
     *
     * <code>int64 packageTime = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPackageTime() {
      
      packageTime_ = 0L;
      onChanged();
      return this;
    }

    private int flags_ ;
    /**
     * <pre>
     * 消息体置位标记，共4bytes，32bits，从最低位开始置位表示相应的消息体中是否包含内容
     * 目前仅有最低4bit有效，分别从低位至高位代表用户信息、终端信息、控制信息、内容信息和附件信息
     * 示意图：
     * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][Attachment][ImMessage][ImCtrlMessage][terminal][userInfo]]
     * 如发送一个conn消息应该包含用户信息、终端信息、控制信息，不包含内容信息和附件信息，则flags的设置值为：
     * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][1][1][1]]
     * </pre>
     *
     * <code>int32 flags = 5;</code>
     * @return The flags.
     */
    @java.lang.Override
    public int getFlags() {
      return flags_;
    }
    /**
     * <pre>
     * 消息体置位标记，共4bytes，32bits，从最低位开始置位表示相应的消息体中是否包含内容
     * 目前仅有最低4bit有效，分别从低位至高位代表用户信息、终端信息、控制信息、内容信息和附件信息
     * 示意图：
     * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][Attachment][ImMessage][ImCtrlMessage][terminal][userInfo]]
     * 如发送一个conn消息应该包含用户信息、终端信息、控制信息，不包含内容信息和附件信息，则flags的设置值为：
     * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][1][1][1]]
     * </pre>
     *
     * <code>int32 flags = 5;</code>
     * @param value The flags to set.
     * @return This builder for chaining.
     */
    public Builder setFlags(int value) {
      
      flags_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 消息体置位标记，共4bytes，32bits，从最低位开始置位表示相应的消息体中是否包含内容
     * 目前仅有最低4bit有效，分别从低位至高位代表用户信息、终端信息、控制信息、内容信息和附件信息
     * 示意图：
     * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][Attachment][ImMessage][ImCtrlMessage][terminal][userInfo]]
     * 如发送一个conn消息应该包含用户信息、终端信息、控制信息，不包含内容信息和附件信息，则flags的设置值为：
     * [[0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][0][0][0] [0][0][0][0][0][1][1][1]]
     * </pre>
     *
     * <code>int32 flags = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFlags() {
      
      flags_ = 0;
      onChanged();
      return this;
    }

    private com.github.mxsm.serialization.protobuf.Header header_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.Header, com.github.mxsm.serialization.protobuf.Header.Builder, com.github.mxsm.serialization.protobuf.HeaderOrBuilder> headerBuilder_;
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     * @return Whether the header field is set.
     */
    public boolean hasHeader() {
      return headerBuilder_ != null || header_ != null;
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     * @return The header.
     */
    public com.github.mxsm.serialization.protobuf.Header getHeader() {
      if (headerBuilder_ == null) {
        return header_ == null ? com.github.mxsm.serialization.protobuf.Header.getDefaultInstance() : header_;
      } else {
        return headerBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    public Builder setHeader(com.github.mxsm.serialization.protobuf.Header value) {
      if (headerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        header_ = value;
        onChanged();
      } else {
        headerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    public Builder setHeader(
        com.github.mxsm.serialization.protobuf.Header.Builder builderForValue) {
      if (headerBuilder_ == null) {
        header_ = builderForValue.build();
        onChanged();
      } else {
        headerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    public Builder mergeHeader(com.github.mxsm.serialization.protobuf.Header value) {
      if (headerBuilder_ == null) {
        if (header_ != null) {
          header_ =
            com.github.mxsm.serialization.protobuf.Header.newBuilder(header_).mergeFrom(value).buildPartial();
        } else {
          header_ = value;
        }
        onChanged();
      } else {
        headerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    public Builder clearHeader() {
      if (headerBuilder_ == null) {
        header_ = null;
        onChanged();
      } else {
        header_ = null;
        headerBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    public com.github.mxsm.serialization.protobuf.Header.Builder getHeaderBuilder() {
      
      onChanged();
      return getHeaderFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    public com.github.mxsm.serialization.protobuf.HeaderOrBuilder getHeaderOrBuilder() {
      if (headerBuilder_ != null) {
        return headerBuilder_.getMessageOrBuilder();
      } else {
        return header_ == null ?
            com.github.mxsm.serialization.protobuf.Header.getDefaultInstance() : header_;
      }
    }
    /**
     * <code>.com.github.mxsm.serialization.protobuf.Header header = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.Header, com.github.mxsm.serialization.protobuf.Header.Builder, com.github.mxsm.serialization.protobuf.HeaderOrBuilder> 
        getHeaderFieldBuilder() {
      if (headerBuilder_ == null) {
        headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.mxsm.serialization.protobuf.Header, com.github.mxsm.serialization.protobuf.Header.Builder, com.github.mxsm.serialization.protobuf.HeaderOrBuilder>(
                getHeader(),
                getParentForChildren(),
                isClean());
        header_ = null;
      }
      return headerBuilder_;
    }

    private java.util.List<com.github.mxsm.serialization.protobuf.CtrlMessage> ctrlMessages_ =
      java.util.Collections.emptyList();
    private void ensureCtrlMessagesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        ctrlMessages_ = new java.util.ArrayList<com.github.mxsm.serialization.protobuf.CtrlMessage>(ctrlMessages_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.CtrlMessage, com.github.mxsm.serialization.protobuf.CtrlMessage.Builder, com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder> ctrlMessagesBuilder_;

    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public java.util.List<com.github.mxsm.serialization.protobuf.CtrlMessage> getCtrlMessagesList() {
      if (ctrlMessagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ctrlMessages_);
      } else {
        return ctrlMessagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public int getCtrlMessagesCount() {
      if (ctrlMessagesBuilder_ == null) {
        return ctrlMessages_.size();
      } else {
        return ctrlMessagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public com.github.mxsm.serialization.protobuf.CtrlMessage getCtrlMessages(int index) {
      if (ctrlMessagesBuilder_ == null) {
        return ctrlMessages_.get(index);
      } else {
        return ctrlMessagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder setCtrlMessages(
        int index, com.github.mxsm.serialization.protobuf.CtrlMessage value) {
      if (ctrlMessagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.set(index, value);
        onChanged();
      } else {
        ctrlMessagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder setCtrlMessages(
        int index, com.github.mxsm.serialization.protobuf.CtrlMessage.Builder builderForValue) {
      if (ctrlMessagesBuilder_ == null) {
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.set(index, builderForValue.build());
        onChanged();
      } else {
        ctrlMessagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder addCtrlMessages(com.github.mxsm.serialization.protobuf.CtrlMessage value) {
      if (ctrlMessagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.add(value);
        onChanged();
      } else {
        ctrlMessagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder addCtrlMessages(
        int index, com.github.mxsm.serialization.protobuf.CtrlMessage value) {
      if (ctrlMessagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.add(index, value);
        onChanged();
      } else {
        ctrlMessagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder addCtrlMessages(
        com.github.mxsm.serialization.protobuf.CtrlMessage.Builder builderForValue) {
      if (ctrlMessagesBuilder_ == null) {
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.add(builderForValue.build());
        onChanged();
      } else {
        ctrlMessagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder addCtrlMessages(
        int index, com.github.mxsm.serialization.protobuf.CtrlMessage.Builder builderForValue) {
      if (ctrlMessagesBuilder_ == null) {
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.add(index, builderForValue.build());
        onChanged();
      } else {
        ctrlMessagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder addAllCtrlMessages(
        java.lang.Iterable<? extends com.github.mxsm.serialization.protobuf.CtrlMessage> values) {
      if (ctrlMessagesBuilder_ == null) {
        ensureCtrlMessagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ctrlMessages_);
        onChanged();
      } else {
        ctrlMessagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder clearCtrlMessages() {
      if (ctrlMessagesBuilder_ == null) {
        ctrlMessages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        ctrlMessagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public Builder removeCtrlMessages(int index) {
      if (ctrlMessagesBuilder_ == null) {
        ensureCtrlMessagesIsMutable();
        ctrlMessages_.remove(index);
        onChanged();
      } else {
        ctrlMessagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public com.github.mxsm.serialization.protobuf.CtrlMessage.Builder getCtrlMessagesBuilder(
        int index) {
      return getCtrlMessagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder getCtrlMessagesOrBuilder(
        int index) {
      if (ctrlMessagesBuilder_ == null) {
        return ctrlMessages_.get(index);  } else {
        return ctrlMessagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public java.util.List<? extends com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder> 
         getCtrlMessagesOrBuilderList() {
      if (ctrlMessagesBuilder_ != null) {
        return ctrlMessagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ctrlMessages_);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public com.github.mxsm.serialization.protobuf.CtrlMessage.Builder addCtrlMessagesBuilder() {
      return getCtrlMessagesFieldBuilder().addBuilder(
          com.github.mxsm.serialization.protobuf.CtrlMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public com.github.mxsm.serialization.protobuf.CtrlMessage.Builder addCtrlMessagesBuilder(
        int index) {
      return getCtrlMessagesFieldBuilder().addBuilder(
          index, com.github.mxsm.serialization.protobuf.CtrlMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * 一个消息包中可发送多条控制消息报文，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.CtrlMessage ctrlMessages = 7;</code>
     */
    public java.util.List<com.github.mxsm.serialization.protobuf.CtrlMessage.Builder> 
         getCtrlMessagesBuilderList() {
      return getCtrlMessagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.CtrlMessage, com.github.mxsm.serialization.protobuf.CtrlMessage.Builder, com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder> 
        getCtrlMessagesFieldBuilder() {
      if (ctrlMessagesBuilder_ == null) {
        ctrlMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.mxsm.serialization.protobuf.CtrlMessage, com.github.mxsm.serialization.protobuf.CtrlMessage.Builder, com.github.mxsm.serialization.protobuf.CtrlMessageOrBuilder>(
                ctrlMessages_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        ctrlMessages_ = null;
      }
      return ctrlMessagesBuilder_;
    }

    private java.util.List<com.github.mxsm.serialization.protobuf.Message> messages_ =
      java.util.Collections.emptyList();
    private void ensureMessagesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        messages_ = new java.util.ArrayList<com.github.mxsm.serialization.protobuf.Message>(messages_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.Message, com.github.mxsm.serialization.protobuf.Message.Builder, com.github.mxsm.serialization.protobuf.MessageOrBuilder> messagesBuilder_;

    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public java.util.List<com.github.mxsm.serialization.protobuf.Message> getMessagesList() {
      if (messagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(messages_);
      } else {
        return messagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public int getMessagesCount() {
      if (messagesBuilder_ == null) {
        return messages_.size();
      } else {
        return messagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public com.github.mxsm.serialization.protobuf.Message getMessages(int index) {
      if (messagesBuilder_ == null) {
        return messages_.get(index);
      } else {
        return messagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder setMessages(
        int index, com.github.mxsm.serialization.protobuf.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.set(index, value);
        onChanged();
      } else {
        messagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder setMessages(
        int index, com.github.mxsm.serialization.protobuf.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.set(index, builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder addMessages(com.github.mxsm.serialization.protobuf.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(value);
        onChanged();
      } else {
        messagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder addMessages(
        int index, com.github.mxsm.serialization.protobuf.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(index, value);
        onChanged();
      } else {
        messagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder addMessages(
        com.github.mxsm.serialization.protobuf.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.add(builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder addMessages(
        int index, com.github.mxsm.serialization.protobuf.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.add(index, builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder addAllMessages(
        java.lang.Iterable<? extends com.github.mxsm.serialization.protobuf.Message> values) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, messages_);
        onChanged();
      } else {
        messagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder clearMessages() {
      if (messagesBuilder_ == null) {
        messages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        messagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public Builder removeMessages(int index) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.remove(index);
        onChanged();
      } else {
        messagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public com.github.mxsm.serialization.protobuf.Message.Builder getMessagesBuilder(
        int index) {
      return getMessagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public com.github.mxsm.serialization.protobuf.MessageOrBuilder getMessagesOrBuilder(
        int index) {
      if (messagesBuilder_ == null) {
        return messages_.get(index);  } else {
        return messagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public java.util.List<? extends com.github.mxsm.serialization.protobuf.MessageOrBuilder> 
         getMessagesOrBuilderList() {
      if (messagesBuilder_ != null) {
        return messagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(messages_);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public com.github.mxsm.serialization.protobuf.Message.Builder addMessagesBuilder() {
      return getMessagesFieldBuilder().addBuilder(
          com.github.mxsm.serialization.protobuf.Message.getDefaultInstance());
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public com.github.mxsm.serialization.protobuf.Message.Builder addMessagesBuilder(
        int index) {
      return getMessagesFieldBuilder().addBuilder(
          index, com.github.mxsm.serialization.protobuf.Message.getDefaultInstance());
    }
    /**
     * <pre>
     * 一个消息包中可发送多条内容消息体，原则上不应该超过100条
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.Message messages = 8;</code>
     */
    public java.util.List<com.github.mxsm.serialization.protobuf.Message.Builder> 
         getMessagesBuilderList() {
      return getMessagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.Message, com.github.mxsm.serialization.protobuf.Message.Builder, com.github.mxsm.serialization.protobuf.MessageOrBuilder> 
        getMessagesFieldBuilder() {
      if (messagesBuilder_ == null) {
        messagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.mxsm.serialization.protobuf.Message, com.github.mxsm.serialization.protobuf.Message.Builder, com.github.mxsm.serialization.protobuf.MessageOrBuilder>(
                messages_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        messages_ = null;
      }
      return messagesBuilder_;
    }

    private java.util.List<com.github.mxsm.serialization.protobuf.AttachmentMessage> attachments_ =
      java.util.Collections.emptyList();
    private void ensureAttachmentsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        attachments_ = new java.util.ArrayList<com.github.mxsm.serialization.protobuf.AttachmentMessage>(attachments_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.AttachmentMessage, com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder, com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder> attachmentsBuilder_;

    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public java.util.List<com.github.mxsm.serialization.protobuf.AttachmentMessage> getAttachmentsList() {
      if (attachmentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(attachments_);
      } else {
        return attachmentsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public int getAttachmentsCount() {
      if (attachmentsBuilder_ == null) {
        return attachments_.size();
      } else {
        return attachmentsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public com.github.mxsm.serialization.protobuf.AttachmentMessage getAttachments(int index) {
      if (attachmentsBuilder_ == null) {
        return attachments_.get(index);
      } else {
        return attachmentsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder setAttachments(
        int index, com.github.mxsm.serialization.protobuf.AttachmentMessage value) {
      if (attachmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttachmentsIsMutable();
        attachments_.set(index, value);
        onChanged();
      } else {
        attachmentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder setAttachments(
        int index, com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder builderForValue) {
      if (attachmentsBuilder_ == null) {
        ensureAttachmentsIsMutable();
        attachments_.set(index, builderForValue.build());
        onChanged();
      } else {
        attachmentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder addAttachments(com.github.mxsm.serialization.protobuf.AttachmentMessage value) {
      if (attachmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttachmentsIsMutable();
        attachments_.add(value);
        onChanged();
      } else {
        attachmentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder addAttachments(
        int index, com.github.mxsm.serialization.protobuf.AttachmentMessage value) {
      if (attachmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttachmentsIsMutable();
        attachments_.add(index, value);
        onChanged();
      } else {
        attachmentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder addAttachments(
        com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder builderForValue) {
      if (attachmentsBuilder_ == null) {
        ensureAttachmentsIsMutable();
        attachments_.add(builderForValue.build());
        onChanged();
      } else {
        attachmentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder addAttachments(
        int index, com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder builderForValue) {
      if (attachmentsBuilder_ == null) {
        ensureAttachmentsIsMutable();
        attachments_.add(index, builderForValue.build());
        onChanged();
      } else {
        attachmentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder addAllAttachments(
        java.lang.Iterable<? extends com.github.mxsm.serialization.protobuf.AttachmentMessage> values) {
      if (attachmentsBuilder_ == null) {
        ensureAttachmentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, attachments_);
        onChanged();
      } else {
        attachmentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder clearAttachments() {
      if (attachmentsBuilder_ == null) {
        attachments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        attachmentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public Builder removeAttachments(int index) {
      if (attachmentsBuilder_ == null) {
        ensureAttachmentsIsMutable();
        attachments_.remove(index);
        onChanged();
      } else {
        attachmentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder getAttachmentsBuilder(
        int index) {
      return getAttachmentsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder getAttachmentsOrBuilder(
        int index) {
      if (attachmentsBuilder_ == null) {
        return attachments_.get(index);  } else {
        return attachmentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public java.util.List<? extends com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder> 
         getAttachmentsOrBuilderList() {
      if (attachmentsBuilder_ != null) {
        return attachmentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(attachments_);
      }
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder addAttachmentsBuilder() {
      return getAttachmentsFieldBuilder().addBuilder(
          com.github.mxsm.serialization.protobuf.AttachmentMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder addAttachmentsBuilder(
        int index) {
      return getAttachmentsFieldBuilder().addBuilder(
          index, com.github.mxsm.serialization.protobuf.AttachmentMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * 一个消息包中可发送多个文件附件，原则上不应该超过10个
     * </pre>
     *
     * <code>repeated .com.github.mxsm.serialization.protobuf.AttachmentMessage attachments = 9;</code>
     */
    public java.util.List<com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder> 
         getAttachmentsBuilderList() {
      return getAttachmentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.mxsm.serialization.protobuf.AttachmentMessage, com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder, com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder> 
        getAttachmentsFieldBuilder() {
      if (attachmentsBuilder_ == null) {
        attachmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.mxsm.serialization.protobuf.AttachmentMessage, com.github.mxsm.serialization.protobuf.AttachmentMessage.Builder, com.github.mxsm.serialization.protobuf.AttachmentMessageOrBuilder>(
                attachments_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        attachments_ = null;
      }
      return attachmentsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.github.mxsm.serialization.protobuf.AntMessagePackage)
  }

  // @@protoc_insertion_point(class_scope:com.github.mxsm.serialization.protobuf.AntMessagePackage)
  private static final com.github.mxsm.serialization.protobuf.AntMessagePackage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.mxsm.serialization.protobuf.AntMessagePackage();
  }

  public static com.github.mxsm.serialization.protobuf.AntMessagePackage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AntMessagePackage>
      PARSER = new com.google.protobuf.AbstractParser<AntMessagePackage>() {
    @java.lang.Override
    public AntMessagePackage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AntMessagePackage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AntMessagePackage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AntMessagePackage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.mxsm.serialization.protobuf.AntMessagePackage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

