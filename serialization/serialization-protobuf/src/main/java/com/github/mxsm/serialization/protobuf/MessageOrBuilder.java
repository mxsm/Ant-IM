// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AntMessage.proto

package com.github.mxsm.serialization.protobuf;

public interface MessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.github.mxsm.serialization.protobuf.Message)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 消息报文时间戳
   * </pre>
   *
   * <code>int64 messageTime = 1;</code>
   * @return The messageTime.
   */
  long getMessageTime();

  /**
   * <pre>
   * 消息报文ID，在同一次socket连接过程中保证唯一，即connId不变的情况下，该ID递增
   * </pre>
   *
   * <code>int64 messageId = 2;</code>
   * @return The messageId.
   */
  long getMessageId();

  /**
   * <pre>
   * 业务类型，如p2p, group, card, red等
   * </pre>
   *
   * <code>.com.github.mxsm.serialization.protobuf.MessageType messageType = 3;</code>
   * @return The enum numeric value on the wire for messageType.
   */
  int getMessageTypeValue();
  /**
   * <pre>
   * 业务类型，如p2p, group, card, red等
   * </pre>
   *
   * <code>.com.github.mxsm.serialization.protobuf.MessageType messageType = 3;</code>
   * @return The messageType.
   */
  com.github.mxsm.serialization.protobuf.MessageType getMessageType();

  /**
   * <pre>
   * 内容消息类型
   * </pre>
   *
   * <code>.com.github.mxsm.serialization.protobuf.MessageContentType messageContentType = 4;</code>
   * @return The enum numeric value on the wire for messageContentType.
   */
  int getMessageContentTypeValue();
  /**
   * <pre>
   * 内容消息类型
   * </pre>
   *
   * <code>.com.github.mxsm.serialization.protobuf.MessageContentType messageContentType = 4;</code>
   * @return The messageContentType.
   */
  com.github.mxsm.serialization.protobuf.MessageContentType getMessageContentType();

  /**
   * <pre>
   * 内容消息额外链接URL地址
   * </pre>
   *
   * <code>string mediaLink = 5;</code>
   * @return The mediaLink.
   */
  java.lang.String getMediaLink();
  /**
   * <pre>
   * 内容消息额外链接URL地址
   * </pre>
   *
   * <code>string mediaLink = 5;</code>
   * @return The bytes for mediaLink.
   */
  com.google.protobuf.ByteString
      getMediaLinkBytes();

  /**
   * <pre>
   * 消息负载
   * </pre>
   *
   * <code>bytes payload = 6;</code>
   * @return The payload.
   */
  com.google.protobuf.ByteString getPayload();

  /**
   * <pre>
   * 原图链接URL地址，预留
   * </pre>
   *
   * <code>string originalLink = 7;</code>
   * @return The originalLink.
   */
  java.lang.String getOriginalLink();
  /**
   * <pre>
   * 原图链接URL地址，预留
   * </pre>
   *
   * <code>string originalLink = 7;</code>
   * @return The bytes for originalLink.
   */
  com.google.protobuf.ByteString
      getOriginalLinkBytes();

  /**
   * <pre>
   * 回复引用的消息报文ID，该引用的消息报文必须在本消息包中存在，预留
   * </pre>
   *
   * <code>int32 quotationMessageId = 8;</code>
   * @return The quotationMessageId.
   */
  int getQuotationMessageId();

  /**
   * <pre>
   * 是否需要回复ack的标志
   * </pre>
   *
   * <code>bool isAsync = 9;</code>
   * @return The isAsync.
   */
  boolean getIsAsync();

  /**
   * <pre>
   * 是否为阅后即焚消息标志，预留
   * </pre>
   *
   * <code>bool isBurn = 10;</code>
   * @return The isBurn.
   */
  boolean getIsBurn();
}
